apply plugin: plugIns.dependency_update
apply plugin: 'java-library'

def insertDependencies(entry) {
    if (entry instanceof Map) {
        entry.each { child ->
            insertDependencies(child.value)
        }
    } else {
        project.dependencies {
            implementation entry
        }
    }
}

dependencyUpdates {
    doFirst {
        if (project.hasProperty("spec")) {
            spec.split(',').each { entry ->
                println entry
                insertDependencies(deps[entry])
            }
        } else {
            insertDependencies(deps)
        }
    }
}

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}
